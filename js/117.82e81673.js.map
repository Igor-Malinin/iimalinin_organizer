{"version":3,"file":"js/117.82e81673.js","mappings":"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","sources":["webpack://iimalinin_organizer/./src/views/PersonalAccountView.vue","webpack://iimalinin_organizer/./node_modules/@kurkle/color/dist/color.esm.js","webpack://iimalinin_organizer/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://iimalinin_organizer/./node_modules/chart.js/dist/chart.js","webpack://iimalinin_organizer/./node_modules/chart.js/auto/auto.js","webpack://iimalinin_organizer/./src/mixins/PersonalAccountMixin.js","webpack://iimalinin_organizer/./src/views/PersonalAccountView.vue?861d"],"sourcesContent":["<template>\n  <div class=\"personal_account\">\n    <main-window msg=\"Личный кабинет\" :style=\"setStyle()\">\n      <div class=\"avatar_n_text\">\n        <div class=\"avatar_container\">\n          <input type=\"file\" ref=\"fileInput\" @change=\"onFileChange\">\n          <img class=\"personal__img\" :src=\"accountData.img\" alt=\"Изображение\" @click=\"openFilePicker\">\n          <a @click=\"openFilePicker\">Изменить</a>\n        </div>\n        <div class=\"personal_text_data\">\n          <p><strong>Фамилия:</strong> {{ accountData.surname }}</p>\n          <p><strong>Имя:</strong> {{ accountData.name }}</p>\n          <p><strong>Отчество:</strong> {{ accountData.patronymic }}</p>\n          <p><strong>Дата рождения:</strong> {{ accountData.birthDate }}</p>\n          <p><strong>Возраст:</strong> {{ accountData.age }}</p>\n        </div>\n      </div>\n      <div class=\"chart_container\">\n        <div class=\"finished_events__chart\">\n          <canvas ref=\"chartCanvas\" class=\"pie_chart\"></canvas>\n        </div>\n      </div>\n    </main-window>\n\n    <main-modal msg=\"Фото Обновлено\" v-model:show=\"isUpdatedImg\" />\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport Chart from 'chart.js/auto';\nimport personalAccountMixin from \"@/mixins/PersonalAccountMixin\";\nimport toggleMixin from \"@/mixins/toggleMixin\";\n\nexport default {\n  name: \"PersonalAccountView\",\n  mixins: [personalAccountMixin, toggleMixin],\n  data() {\n    return {\n      selectedImage: null,\n    }\n  },\n  mounted() {\n    this.renderChart()\n  },\n  methods: {\n    renderChart() {\n      const chartCanvas = this.$refs.chartCanvas\n      const ctx = chartCanvas.getContext('2d')\n\n      const trueCount = this.getTodoIsFinished.filter(Boolean).length\n      const falseCount = this.getTodoIsFinished.length - trueCount\n\n      new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: ['Не завершенные дела', 'Завершенные дела'],\n          datasets: [{\n            data: [falseCount, trueCount],\n            backgroundColor: ['#fcabab', '#ccfc85']\n          }]\n        },\n        options: { plugins: { legend: {\n          labels: {\n            font: {\n              size: 16,\n            },\n            padding: 15\n          },\n        }}}\n      })\n    },\n    setStyle() {\n      return 'width: 70%; flex-direction: row; margin: 0 auto; padding: 50px; background-color: #fafdff; justify-content: space-between;'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.personal_text_data {\n  border: 1px solid #6696c9;\n  padding: 10px;\n  border-radius: 4px;\n  p {\n    padding: 5px 20px;\n  }\n}\n\n.avatar_n_text {\n  width: 50%;\n}\n\n.avatar_container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  input {\n    display: none\n  }\n  a {\n    cursor: pointer;\n  }\n}\n\n.personal__img {\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  border: 4px solid #336aa1;\n  border-radius: 50%;\n  cursor: pointer;\n  &:hover {\n    border: 6px solid #1f4162;\n  }\n  &:active {\n    border: 8px solid #173149;\n  }\n}\n\n.chart_container {\n  margin-top: 20px;\n  width: 40%;\n}\n\n.finished_events__chart {\n  width: 250px;\n  margin: 15px auto 0;\n}\n\n</style>","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {mapGetters, mapMutations, mapState} from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      isUpdatedImg: false,\n      accountData: {\n        id: null,\n        surname: '',\n        name: '',\n        patronymic: '',\n        birthDate: '',\n        age: null,\n        img: ''\n      }\n    }\n  },\n  mounted() {\n    this.accountData = {...this.displayPersonalInfo()}\n  },\n  methods: {\n    ...mapMutations({\n      setAccountInfo: \"postAccount/setAccountInfo\"\n    }),\n    displayPersonalInfo() {\n      return this.getAccountInfo\n    },\n    openFilePicker() {\n      this.$refs.fileInput.click()\n    },\n    onFileChange(event) {\n      const file = event.target.files[0]\n      if (file && file.type.includes('image')) {\n        const reader = new FileReader()\n        reader.onload = () => {\n          this.accountData.img = reader.result\n          this.getAccountInfo.img = reader.result\n        };\n        reader.readAsDataURL(file)\n        this.isUpdatedImg = true\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      accountInfo: state => state.postAccount.accountInfo\n    }),\n    ...mapGetters({\n      getAccountInfo: \"postAccount/getAccountInfo\",\n      getTodoIsFinished: \"postTodos/getTodoIsFinished\"\n    })\n  }\n}","import { render } from \"./PersonalAccountView.vue?vue&type=template&id=70ea1a3f&scoped=true\"\nimport script from \"./PersonalAccountView.vue?vue&type=script&lang=js\"\nexport * from \"./PersonalAccountView.vue?vue&type=script&lang=js\"\n\nimport \"./PersonalAccountView.vue?vue&type=style&index=0&id=70ea1a3f&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-70ea1a3f\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","ref","_createElementBlock","_hoisted_1","_createVNode","_component_main_window","msg","style","_normalizeStyle","$options","setStyle","_hoisted_2","_hoisted_3","type","onChange","_cache","args","_ctx","onFileChange","src","accountData","img","alt","onClick","openFilePicker","_hoisted_5","_hoisted_6","_toDisplayString","surname","_hoisted_7","name","_hoisted_8","patronymic","_hoisted_9","birthDate","_hoisted_10","age","_hoisted_11","_hoisted_12","_hoisted_13","_component_main_modal","show","isUpdatedImg","$event","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","properties","active","animation","resize","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","mounted","displayPersonalInfo","methods","mapMutations","setAccountInfo","getAccountInfo","$refs","fileInput","click","file","files","reader","FileReader","onload","readAsDataURL","computed","mapState","accountInfo","state","postAccount","mapGetters","getTodoIsFinished","mixins","personalAccountMixin","toggleMixin","selectedImage","renderChart","chartCanvas","trueCount","Boolean","falseCount","__exports__"],"sourceRoot":""}